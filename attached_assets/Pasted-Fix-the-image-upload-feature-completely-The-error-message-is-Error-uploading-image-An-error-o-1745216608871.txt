Fix the image upload feature completely. The error message is:

"Error uploading image: An error occurred while uploading the image"

I'm trying to upload JPG files but it fails on Replit hosted app (`pike.replit.dev`).

Hereâ€™s exactly what you need to do:

âœ… 1. In `app.py` or the backend file:
- Set `UPLOAD_FOLDER = 'static/uploads'` in `app.config`
- Ensure `os.makedirs('static/uploads', exist_ok=True)` is called so the folder exists
- Define a helper `allowed_file()` function to check file extensions
- Use `secure_filename` and `uuid.uuid4()` to create a unique filename
- Save the file inside the `UPLOAD_FOLDER`
- Return a JSON with the uploaded file URL (like `/static/uploads/xyz.jpg`)

âœ… 2. In HTML (frontend):
- Make sure the form tag has `enctype="multipart/form-data"` and method is POST
- File input must have the name `file`

âœ… 3. In JS (if JS is used for upload):
- Ensure you are sending `FormData` with `file` key
- Check that the upload URL matches the backend route (`/upload`)

âœ… 4. Return success and show uploaded image in the UI

âœ… 5. If Object Storage is used on Replit, handle upload using `replit.storage` with signed URLs or switch to local storage if Object Storage is failing.

âœ… 6. Print detailed error logs in the backend (with try-except block) to show why upload fails.

ðŸ”¥ Update the entire project if needed to ensure image uploads work without this popup error.

Use this Flask upload route (edit as needed):

```python
import os
import uuid
from flask import Flask, request, jsonify
from werkzeug.utils import secure_filename

app = Flask(__name__)
UPLOAD_FOLDER = 'static/uploads'
ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'gif'}
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400
    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400
    if file and allowed_file(file.filename):
        try:
            filename = secure_filename(file.filename)
            unique_name = f"{uuid.uuid4().hex}_{filename}"
            file_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_name)
            file.save(file_path)
            return jsonify({'url': f"/static/uploads/{unique_name}"})
        except Exception as e:
            print("Upload error:", e)
            return jsonify({'error': f"Internal error: {str(e)}"}), 500
    return jsonify({'error': 'Invalid image format'}), 400